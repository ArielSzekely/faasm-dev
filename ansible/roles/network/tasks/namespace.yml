---

# Blog post: https://blogs.igalia.com/dpino/2016/04/10/network-namespaces/

- set_fact:
    ns_name: "faasm{{ ns_idx }}"
    vif_name: "faasm{{ ns_idx }}"
    vif_peer: "faasmp{{ ns_idx }}"
    base_ip: "10.200.{{ ns_idx }}.0"
    vif_ip: "10.200.{{ ns_idx }}.1"
    vif_peer_ip: "10.200.{{ ns_idx }}.2"

# ----------------------------
# Namespace
# ----------------------------

- name: "Remove namespace {{ ns_name }} if exists"
  become: yes
  shell: "ip netns del {{ ns_name }} || true"

- name: "Create namespace {{ ns_name }}"
  become: yes
  shell: "ip netns add {{ ns_name }}"

# ----------------------------
# Virtual interface pair
# ----------------------------

- name: "Remove veth link if exists"
  become: yes
  shell: "ip link del {{ vif_name }} | true"

- name: "Create veth link ({{ vif_name }} <-> {{ vif_peer }}"
  become: yes
  shell: "ip link add {{ vif_name }} type veth peer name {{ vif_peer }}"

- name: "Add {{ vif_peer }} to namespace {{ ns_name }}"
  become: yes
  shell: "ip link set {{ vif_peer }} netns {{ ns_name }}"

- name: "Set up IP {{ vif_ip }} for {{ vif_name }}"
  become: yes
  shell: "ip addr add {{ vif_ip }}/24 dev {{ vif_name }}"

- name: "Bring up {{ vif_name }}"
  become: yes
  shell: "ip link set {{ vif_name }} up"

- name: "Set up IP {{ vif_peer_ip }} for {{ vif_peer }}"
  become: yes
  shell: "ip netns exec {{ ns_name }} ip addr add {{ vif_peer_ip }}/24 dev {{ vif_peer }}"

- name: "Bring up {{ vif_peer }} and lo"
  become: yes
  shell: "ip netns exec {{ ns_name }} ip link set {{ item }} up"
  with_items:
    - "{{ vif_peer }}"
    - "lo"

- name: "Set up default route through {{ vif_ip }} in {{ ns_name }}"
  become: yes
  shell: "ip netns exec {{ ns_name }} ip route add default via {{ vif_ip }}"

# ----------------------------
# iptables
# ----------------------------

- name: "Remove masquerading of {{ base_ip }} if present"
  become: yes
  shell: "iptables -t nat -D POSTROUTING -s {{ base_ip }}/24 -o eth0 -j MASQUERADE | true"

# Note use of -I to prepend rather than -A to append
- name: "Enable masquerading of {{ base_ip }} on eth0"
  become: yes
  shell: "iptables -t nat -I POSTROUTING -s {{ base_ip }}/24 -o eth0 -j MASQUERADE"

- name: "Drop forwarding rules"
  become: yes
  shell: "{{ item }}"
  with_items:
    - "iptables -D FORWARD -i eth0 -o {{ vif_name }} -j ACCEPT | true"
    - "iptables -D FORWARD -o eth0 -i {{ vif_name }} -j ACCEPT | true"

- name: "Add forwarding rules"
  become: yes
  shell: "{{ item }}"
  with_items:
  - "iptables -I FORWARD -i eth0 -o {{ vif_name }} -j ACCEPT"
  - "iptables -I FORWARD -o eth0 -i {{ vif_name }} -j ACCEPT"

#-----------------------------
# Traffic shaping
# ----------------------------

# Limiting egress on this virtual interface is essentially limiting ingress on the user's code
# (as it's limiting entry into the namespace)

- name: "Remove queueing discipline on {{ vif_name }}"
  become: yes
  shell: "tc qdisc del dev {{ vif_name }} root handle 1: htb | true"

- name: "Add queueing discipline to {{ vif_name }}"
  become: yes
  shell: "tc qdisc add dev {{ vif_name }} root handle 1: htb default 1"

- name: "Add rate-limited class"
  become: yes
  shell: "tc class add dev {{ vif_name }} parent 1: classid 1:1 htb rate {{ ingress_rate }}"

# Limiting egress on the virtual interface inside the namespace is limiting egress on the
# user's code

- name: "Remove queueing discipline on {{ vif_peer }}"
  become: yes
  shell: "sudo ip netns exec {{ ns_name }} tc qdisc del dev {{ vif_peer }} root handle 1: htb | true"

- name: "Add queueing discipline to {{ vif_peer }}"
  become: yes
  shell: "sudo ip netns exec {{ ns_name }} tc qdisc add dev {{ vif_peer }} root handle 1: htb default 1"

- name: "Add rate-limited class"
  become: yes
  shell: "sudo ip netns exec {{ ns_name }} tc class add dev {{ vif_peer }} parent 1: classid 1:1 htb rate {{ ingress_rate }}"
